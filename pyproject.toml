[project]
name = "superagentx"
version = "0.1.18.5"
description = "The Ultimate Modular Autonomous Multi AI Agent Framework."
license = { text = "MIT" }
authors = [
    { name = "SuperAgentX AI", email = "<support@superagentx.ai>"},
]
maintainers = [
    { name = "SuperAgentX AI", email = "<support@superagentx.ai>"},
]
readme = "README.md"

keywords = ["superagentX", "AGI", "Agentic AI", "ASI", "superagentx", "agent", "LLM", "cli"]
requires-python = ">=3.12,<=3.13"

dependencies = [
    "pydantic>=2.8.2",
    "openai>=1.47.1",
    "exa-py>=1.1.4",
    "aiohttp>=3.10.8",
    "rich>=13.9.2",
    "aiosqlite>=0.20.0",
    "websockets>=13.1",
    "aiofiles>=24.1.0",
    "camel-converter>=4.0.1",
    "yapf (>=0.43.0,<0.44.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "mcp (>=1.7.0,<2.0.0)",
    "aiopath (==0.7.7)",
    "markdownify (>=1.1.0)",
    "psutil (>=7.0.0 )",
    "playwright (>=1.52.0)",
    "pyyaml (>=6.0.2)",
    "importlib-resources (>=6.5.2)"
]

[project.urls]
homepage = "https://www.superagentx.ai/"
repository = "https://github.com/superagentxai/superagentx"
documentation = "https://docs.superagentx.ai/"

[project.scripts]
superagentx-cli = "superagentx_cli.main:app"
superagentx-app = "superagentx_cli.cli_app:app"

[project.optional-dependencies]
cli = [
    "jinja2>=3.1.4",
    "typer>=0.13.0",
    "rich>=13.9.2",
    "yapf>=0.43.0"
]
all =[
    # Cli
    "jinja2>=3.1.4",
    "typer>=0.13.0",
    "rich>=13.9.2",
    "yapf>=0.43.0",
    # All
    "bokeh>=3.7.3",
    "neo4j>=5.28.1",
    "opensearch-py>=2.8.0",
    "scipy>=1.15.3",
    "elasticsearch>=9.0.1",
    "numpy>=2.2.6",
    "ollama>=0.4.7",
    "fastembed>=0.6.0",
    "chromadb>=1.0.10",
    "opentelemetry-exporter-otlp-proto-grpc>=1.33.1",
    "boto3>=1.35.8"
]

[tool.poetry]
packages = [
    { include = "superagentx" },
    { include = "superagentx_cli" }
]

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
